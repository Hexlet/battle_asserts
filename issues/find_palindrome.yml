checks:
  php: |-
    assertEqual('yzzy', findPalindrome('xyzzy'));
    $pal = 'dhfdkjfffhhfffjkdfhd';
    $st = 'afbbbfjdjklgdfdhfdkjfffhhfffjkdfhdhkyejejfjkd';
    assertEqual($pal, findPalindrome($st));
    $pal = 'racecar';
    $st = 'bartarcarracecarbartar';
    assertEqual($pal, findPalindrome($st));
    $pal = '46264';
    $st = '3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982';
    assertEqual($pal, findPalindrome($st));
  javascript: |-
    assertEqual('yzzy', findPalindrome('xyzzy'));
    var pal = 'dhfdkjfffhhfffjkdfhd';
    var st = 'afbbbfjdjklgdfdhfdkjfffhhfffjkdfhdhkyejejfjkd';
    assertEqual(pal, findPalindrome(st));
    var pal = 'racecar';
    var st = 'bartarcarracecarbartar';
    assertEqual(pal, findPalindrome(st));
    var pal = '46264';
    var st = '3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982';
    assertEqual(pal, findPalindrome(st));
  python: |-
    assert_equal('yzzy', find_palindrome('xyzzy'))
    pal = 'dhfdkjfffhhfffjkdfhd'
    st = 'afbbbfjdjklgdfdhfdkjfffhhfffjkdfhdhkyejejfjkd'
    assert_equal(pal, find_palindrome(st))
    pal = 'racecar'
    st = 'bartarcarracecarbartar'
    assert_equal(pal, find_palindrome(st))
    pal = '46264'
    st = '3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982'
    assert_equal(pal, find_palindrome(st))
  ruby: |-
    assert_equal('yzzy', find_palindrome('xyzzy'))
    pal = 'dhfdkjfffhhfffjkdfhd'
    st = 'afbbbfjdjklgdfdhfdkjfffhhfffjkdfhdhkyejejfjkd'
    assert_equal(pal, find_palindrome(st))
    pal = 'racecar'
    st = 'bartarcarracecarbartar'
    assert_equal(pal, find_palindrome(st))
    pal = '46264'
    st = '3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982'
    assert_equal(pal, find_palindrome(st))
level: medium
tags: []
description: |
  A palindrome is a string that is written the same forward as it is in reverse.
  Write a method to return the longest palindrome in a given string.
